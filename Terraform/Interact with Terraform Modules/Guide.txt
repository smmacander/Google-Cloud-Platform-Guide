Task 1. Use modules from the Registry
- Open the Terraform Registry page for the Terraform Network module in a new browser tab or window.
  https://registry.terraform.io/modules/terraform-google-modules/network/google/3.3.0
  Create a Terraform configuration
  1. To start, run the following commmands in Cloud Shell to clone the example simple project form the Google Terraform modules GitHub repository and switch to the v3.3.0 branch:
     git clone https://github.com/terraform-google-modules/terraform-google-network
     cd terraform-google-network
     git checkout tags/v3.3.0 -b v3.3.0
  2. On the Cloud Shell toolbar, click Open Editor.
     To switch between Cloud Shell and the code editor, clcik Open Editor or Open Terminal as required, or click Open in a new window to leave the Editor open in a separate tab.
  3. In the editor, navigate to terraform-google-network/examples/simple_project, and open the main.tf file.
     Your main.tf configuration will look like the main.tf in the current directory.
  Set values for module input variables
  - Within the module "test-vpc-module" block, review the input variables you are setting. 
    Each of these input variables is documented in the Terraform Registry.
    The required inputs for this module are:
    - network_name: The name of the network being created
    - project_id: The ID of the project where this VPC will be created
    - subnets: The list of subnets being created
  Define root input variables
  1. To retrieve your Project ID, run the following command in Cloud Shell:
     gcloud config list --format 'value(core.project)'
  2. In the Editor, still in the same directory, navigate to variables.tf.
  3. Fill in the variable project_id with the output of the previous command.
     You must follow the format below and set the default value for the variable:
     variable "project_id" {
      description = "The project ID to host the network in"
      default     = "FILL IN YOUR PROJECT ID HERE"
     }
  4. In variables.tf, fill in the variable network_name.
     You can use the name example-vpc or any other name you'd like.
     You must follow the format below and set the default value for the variable:
     variable "network_name" {
      description = "The name of the VPC network being created"
      default     = "example-vpc"
     }
  Define root output values
  - Navigate to the outputs.tf file inside of your configuration's directory.
    Verify that the file contains the items in the guide's outputs.tf file.
  Provision infrastructure
  1. In Cloud Shell, navigate to your simple_project directory:
     cd ~/terraform-google-network/examples/simple_project
  2. Initialize your Terraform configuration:
     terraform init
  3. Create your VPC:
     terraform apply
  4. To apply the changes and continue, respond to the prompt with yes.
  Clean up your infrastructure
  1. Destroy the infrastructure you created:
     terraform destroy
  2. Respond to the prompt with yes.
     Terraform will destroy the infrastructure you created
Task 2. Build a module
  Create a module
  1. Create the directory for your new module:
     cd ~
     touch main.tf
     mkdir -p modules/gcs-static-website-bucket
  2. Navigarte to the module directory and run the following commands to create three empty files:
     cd modules/gcs-static-website-bucket
     touch website.tf variables.tf outputs.tf
  3. Inside the gcs-static-website-bucket directory, create a file called README.md with the following content:
     # GCS static website bucket
     This module provisions Cloud Storage buckets configured for static website hosting.
  4. Create another file called LICENSE with the following content:
     Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.
     You may obtain a copy of the License at
      http://www.apache.org/licenses/LICENSE-2.0
     Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS,  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and limitations under the License.
  5. Add the Cloud Storage bucket resource show in the example website.tf file to your website.tf file inside the modules/gcs-static-website-bucket directory.
